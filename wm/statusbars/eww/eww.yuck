(defwindow statusbar
 :monitor 0
 :geometry (geometry :x "90%"
                     :y "10px"
                     :width "100%"
                     :height "30px"
                     :anchor "top center")
 :stacking "fg"
 :exclusive true
 :focusable false
 (box :orientation "horizontal"
      :halign "fill"
      :hexpand true
      (box :orientation "horizontal"
           :halign "start"
           :hexpand true
           (_workspaces))
      (box :orientation "horizontal"
           :halign "center"
           time)
      (box :orientation "horizontal"
           :halign "end"
           :hexpand true
           (metric :label "ï€¨"
                   :value volume
                   :onchange "amixer sset Master {}%")
           (battery :capacity {EWW_BATTERY.BAT0.capacity}
                    :status {EWW_BATTERY.BAT0.status}))))

(defpoll time 
         :interval "1s"
 `date +%H:%M:%S`)

(defpoll volume :interval "1s"
 "scripts/get-volume.sh")

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces.sh")
(deflisten current_workspace :intial "..." "bash ~/.config/eww/scripts/get-active-workspace.sh")
(deflisten urgent_workspace :intial "..." "bash ~/.config/eww/scripts/get-urgent-workspaces.sh")

(defwidget _workspaces []
 (eventbox :onscroll "bash ~/.config/ewww/scripts/change-active-workspace.sh {} ${current_workspace}"
           :class "workspaces-widget"
  (box :space-evenly true
   (label :text "${workspaces}${current_workspace}${urgent_workspace}" :visible false)
   (for workspace in workspaces
    (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
     (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"} ${workspace.id == urgent_workspace ? "urgent" : ""}"
      (image :path "icons/radio_button_${workspace.id == current_workspace ? "on" : "off" }.svg"
             :image-height 20
             :image-width 20)))))))

(defwidget battery [capacity status]
 (box :orientation "horizontal"
      (label :text "${capacity}")
      (image :path "icons/battery_${status == 'Charging' ? "charging" :
        capacity > 80 ? "100" :
        capacity > 60 ? "80" :
        capacity > 40 ? "60" :
        capacity > 20 ? "40" : "20"}.png"
             :image-height 20
             :image-width 20)))

(defwidget metric [label value onchange]
 (box :orientation "h"
      :class "metric"
      :space-evenly false
  (box :class "label" label)
  (scale :min 0
         :max 101
         :active {onchange != ""}
         :value value
         :onchange onchange)))

