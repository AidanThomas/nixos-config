(defpoll username :interval "1h" 'echo "$(whoami)@$(hostname)"')
(defpoll memory :interval "5s" "scripts/system --memory")
(defpoll memory_value :interval "5s" "scripts/system --memory-value")
(defpoll disk :interval "5s" "scripts/system --disk")
(defpoll disk_value :interval "5s" "scripts/system --disk-value")

;; Main widget to include in statusbar
(defwidget nixos []
  (eventbox :class "nixos-button"
            :onclick "scripts/pop --powermenu"
            (image :class "nixos-image"
                   :path "images/nixos.png"
                   :halign "center"
                   :valign "center"
                   :image-height "25"
                   :image-width "25")))

;; Popup widget
(defwindow power_menu :monitor 0
                      :geometry (geometry :x "5px"
                                          :y "5px"
                                          :anchor "top left")
                      (power_menu))

(defwidget power_menu []
  (box :class "power-menu":orientation "v" :width 350 :space-evenly false
    (box :orientation "h" :class "power-menu-row" :space-evenly false
      (user)
      (power_options))
    (box :orientation "h" :class "power-menu-row"
      (app_shortcuts)
      (action_shortcuts))
    (box :orientation "h" :class "power-menu-row"
      (system_utilities))
    (box :orientation "h" :class "power-menu-row"
      (file_shortcuts))
    (box :orienation "h" :class "power-menu-row"
      (system_information))))

(defwidget user []
  (box :orientation "v" :class "widget-container" :hexpand true :space-evenly false
    (image :path "./images/aidancharlogo.png" :class "user-image"
           :image-height 130
           :image-width 130)
    (label :text username :class "user-label")))

(defwidget power_options []
  (box :orientation "v" :class "widget-container" :width 80 
    (power_menu_button :label "" :class "shutdown" :action "scripts/power --shutdown")
    (power_menu_button :label "" :class "restart" :action "scripts/power --restart")
    (power_menu_button :label "󰍃" :class "logout" :action "scripts/power --logout")
    (power_menu_button :label "󰤄" :class "sleep" :action "scripts/power --sleep")))


;;apps:
;;kitty
;;firefox
;;discord
;;spotify
;;
;;websites:
;;youtube
;;reddit
;;github
;;mynixos

(defwidget app_shortcuts []
  (box :orientation "v" :class "widget-container" :height 20
    (box :orientation "h" :class "widget-container"
      (power_menu_button :label "󰈹" :class "app-shortcut browser" :action "firefox")
      (power_menu_button :label "" :class "app-shortcut discord" :action "discord"))
    (box :orientation "h" :class "widget-container"
      (power_menu_button :label "" :class "app-shortcut spotify" :action "spotify")
      (power_menu_button :label "" :class "app-shortcut terminal" :action "kitty"))))

(defwidget action_shortcuts []
  (box :orientation "v" :class "widget-container" :height 20
    (box :orientation "h" :class "widget-container"
      (power_menu_button :label "" :class "action-shortcut youtube" :action "firefox --new-tab https://youtube.com")
      (power_menu_button :label "󰑍" :class "action-shortcut reddit" :action "firefox --new-tab https://reddit.com"))
    (box :orientation "h" :class "widget-container"
      (power_menu_button :label "" :class "action-shortcut github" :action "firefox --new-tab https://github.com")
      (power_menu_button :label "" :class "action-shortcut mynixos" :action "firefox --new-tab https://mynixos.com"))))

(defwidget system_utilities []
  (box :orientation "h" :class "widget-container system-utilities"
    (power_menu_button :label "󰤨" :class "wifi ${wifi_enabled ? "" : "muted"}" :action "echo hello")
    (power_menu_button :label "󰂯" :class "bluetooth ${wifi_enabled ? "" : "muted"}" :action "echo hello")
    (power_menu_button :label "" :class "notifications ${notifications_dnd ? "muted" : ""}" :action "scripts/notifications --dnd")
    (power_menu_button :label "" :class "speakers ${speaker_muted ? "muted": ""}" :action "scripts/audio --mute-speakers")
    (power_menu_button :label "" :class "microphone ${mic_muted ? "muted": ""}" :action "scripts/audio --mute-microphone")))

(defwidget file_shortcuts []
  (box :orientation "h" :class "widget-container"
    (box :orientation "v" :class "widget-container" :halign "start"
      (file_shortcut :label "󰉍 Downloads" :class "downloads" :filepath "~/Downloads")
      (file_shortcut :label "󰉌 Videos" :class "videos" :filepath "~/Videos")
      (file_shortcut :label "󰚝 Projects" :class "projects" :filepath "~/dev"))
    (box :orientation "v" :class "widget-container" :halign "end"
      (file_shortcut :label "󱧶 Documents" :class "documents" :filepath "~/Documents")
      (file_shortcut :label "󰉏 Pictures" :class "pictures" :filepath "~/Pictures")
      (file_shortcut :label "󱂵 Home" :class "home" :filepath "~"))))

(defwidget system_information []
  (box :orientation "v" :class "widget-container"
    (resource_bar 
      :label "" 
      :value "${round(EWW_CPU.avg,0)}" 
      :sub-label "${round(EWW_CPU.avg,0)}%" 
      :class "cpu")
    (resource_bar 
      :label "" 
      :value memory_value 
      :sub-label memory
      :class "memory")
    (resource_bar 
      :label "󰋊" 
      :value disk_value 
      :sub-label disk 
      :class "disk")))

(defwidget power_menu_button [label class action]
  (box :class "button ${class}"
    (eventbox :class "button ${class}" :onclick action
      (box :class "inner"
        (label :text label :class "label")))))

(defwidget file_shortcut [label class filepath]
  (box :class "file-shortcut ${class}"
    (eventbox :class "file-shortcut ${class}" :onclick "scripts/files ${filepath}"
      (label :text label :class "file-label" :xalign 0))))

(defwidget resource_bar [label sub-label value class]
  (box :orientation "v" :class "resource-bar-container ${class}" :space-evenly false
    (box :orientation "h" :class "resource-bar" :hexpand true :space-evenly false
      (label :text label :class "bar-label")
      (scale :orientation "h" :value value :class "bar ${class}" :hexpand true))
    (label :text sub-label :class "bar-sub-label" :xalign 1)))
